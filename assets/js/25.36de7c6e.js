(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{421:function(e,r,t){"use strict";t.r(r);var o=t(56),n=Object(o.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"广度优先搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#广度优先搜索"}},[e._v("#")]),e._v(" 广度优先搜索")]),e._v(" "),t("p",[e._v("广度优先搜索（"),t("code",[e._v("BFS")]),e._v("）是一种遍历或搜索数据结构（如树或图）的算法，也可以在更抽象的场景中使用。")]),e._v(" "),t("p",[e._v("它的特点是越是接近根结点的结点将越早地遍历。")]),e._v(" "),t("p",[e._v("例如，我们可以使用 "),t("code",[e._v("BFS")]),e._v(" 找到从起始结点到目标结点的路径，特别是最短路径。")]),e._v(" "),t("p",[e._v("在"),t("code",[e._v("BFS")]),e._v("中，结点的处理顺序与它们添加到队列的顺序是完全相同的顺序，即先进先出，所以广度优先搜索一般使用队列实现。")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BB%8E%E4%B8%8A%E5%88%B0%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("从上到下打印二叉树"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/word-ladder/",target:"_blank",rel:"noopener noreferrer"}},[e._v("单词接龙"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/employee-importance/",target:"_blank",rel:"noopener noreferrer"}},[e._v("员工的重要性"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/number-of-islands/",target:"_blank",rel:"noopener noreferrer"}},[e._v("岛屿数量"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"深度优先搜索"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#深度优先搜索"}},[e._v("#")]),e._v(" 深度优先搜索")]),e._v(" "),t("p",[e._v("和广度优先搜索一样，深度优先搜索（"),t("code",[e._v("DFS")]),e._v("）是用于在树/图中遍历/搜索的一种重要算法。")]),e._v(" "),t("p",[e._v("与 "),t("code",[e._v("BFS")]),e._v(" 不同，更早访问的结点可能不是更靠近根结点的结点。因此，你在"),t("code",[e._v("DFS")]),e._v(" 中找到的第一条路径可能不是最短路径。")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://i.loli.net/2019/08/19/uNAkPfLY9HRjVQU.png",alt:""}})]),e._v(" "),t("p",[e._v("在"),t("code",[e._v("DFS")]),e._v("中，结点的处理顺序是完全相反的顺序，就像它们被添加到栈中一样，它是后进先出。所以深度优先搜索一般使用栈实现。")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树的中序遍历"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("二叉树的最大深度"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/path-sum/",target:"_blank",rel:"noopener noreferrer"}},[e._v("路径总和"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/course-schedule/",target:"_blank",rel:"noopener noreferrer"}},[e._v("课程表"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/number-of-islands/",target:"_blank",rel:"noopener noreferrer"}},[e._v("岛屿数量"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=n.exports}}]);