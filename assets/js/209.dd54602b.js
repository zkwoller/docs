(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{608:function(t,e,a){"use strict";a.r(e);var r=a(56),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("经过五章的学习，我们终于回到了"),a("code",[t._v("React")]),t._v("应用的起点。")]),t._v(" "),a("p",[t._v("这一节我们完整的走通"),a("code",[t._v("ReactDOM.render")]),t._v("完成页面渲染的整个流程。")]),t._v(" "),a("h2",{attrs:{id:"创建fiber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建fiber"}},[t._v("#")]),t._v(" 创建fiber")]),t._v(" "),a("p",[t._v("从"),a("RouterLink",{attrs:{to:"/reactDiff/process/doubleBuffer.html#mount时"}},[t._v("双缓存机制一节")]),t._v("我们知道，首次执行"),a("code",[t._v("ReactDOM.render")]),t._v("会创建"),a("code",[t._v("fiberRootNode")]),t._v("和"),a("code",[t._v("rootFiber")]),t._v("。其中"),a("code",[t._v("fiberRootNode")]),t._v("是整个应用的根节点，"),a("code",[t._v("rootFiber")]),t._v("是要渲染组件所在组件树的"),a("code",[t._v("根节点")]),t._v("。")],1),t._v(" "),a("p",[t._v("这一步发生在调用"),a("code",[t._v("ReactDOM.render")]),t._v("后进入的"),a("code",[t._v("legacyRenderSubtreeIntoContainer")]),t._v("方法中。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// container指ReactDOM.render的第二个参数（即应用挂载的DOM节点）")]),t._v("\nroot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_reactRootContainer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("legacyCreateRootFromDOMContainer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  forceHydrate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfiberRoot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_internalRoot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("你可以从"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-dom/src/client/ReactDOMLegacy.js#L193",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("看到这一步的代码")])]),t._v(" "),a("p",[a("code",[t._v("legacyCreateRootFromDOMContainer")]),t._v("方法内部会调用"),a("code",[t._v("createFiberRoot")]),t._v("方法完成"),a("code",[t._v("fiberRootNode")]),t._v("和"),a("code",[t._v("rootFiber")]),t._v("的创建以及关联。并初始化"),a("code",[t._v("updateQueue")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createFiberRoot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("containerInfo")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RootTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("hydrate")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("hydrationCallbacks")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SuspenseHydrationCallbacks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建fiberRootNode")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("root")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FiberRoot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FiberRootNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("containerInfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hydrate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建rootFiber")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" uninitializedFiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHostRootFiber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接rootFiber与fiberRootNode")]),t._v("\n  root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" uninitializedFiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  uninitializedFiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stateNode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化updateQueue")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initializeUpdateQueue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uninitializedFiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("根据以上代码，现在我们可以在"),a("RouterLink",{attrs:{to:"/reactDiff/process/doubleBuffer.html#mount时"}},[t._v("双缓存机制一节")]),t._v("基础上补充上"),a("code",[t._v("rootFiber")]),t._v("到"),a("code",[t._v("fiberRootNode")]),t._v("的引用。")],1),t._v(" "),a("img",{attrs:{src:t.$withBase("/img/fiberroot.png"),alt:"fiberRoot"}}),t._v(" "),a("blockquote",[a("p",[t._v("你可以从"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberRoot.new.js#L97",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("看到这一步的代码")])]),t._v(" "),a("h2",{attrs:{id:"创建update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建update"}},[t._v("#")]),t._v(" 创建update")]),t._v(" "),a("p",[t._v("我们已经做好了组件的初始化工作，接下来就等待创建"),a("code",[t._v("Update")]),t._v("来开启一次更新。")]),t._v(" "),a("p",[t._v("这一步发生在"),a("code",[t._v("updateContainer")]),t._v("方法中。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateContainer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("element")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReactNodeList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("container")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" OpaqueRoot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parentComponent")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("React$Component"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("Function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Lane "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略与逻辑不相关代码")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建update")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" update "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eventTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" suspenseConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update.payload为需要挂载在根节点的组件")]),t._v("\n  update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("payload "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("element"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// callback为ReactDOM.render的第三个参数 —— 回调函数")]),t._v("\n  callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" callback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将生成的update加入updateQueue")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueueUpdate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调度更新")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduleUpdateOnFiber")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eventTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...省略与逻辑不相关代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("你可以从"),a("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactFiberReconciler.new.js#L255",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("看到"),a("code",[t._v("updateContainer")]),t._v("的代码")])]),t._v(" "),a("p",[t._v("值得注意的是其中"),a("code",[t._v("update.payload = {element};")])]),t._v(" "),a("p",[t._v("这就是我们在"),a("RouterLink",{attrs:{to:"/reactDiff/state/update.html#update的结构"}},[t._v("Update一节")]),t._v("介绍的，对于"),a("code",[t._v("HostRoot")]),t._v("，"),a("code",[t._v("payload")]),t._v("为"),a("code",[t._v("ReactDOM.render")]),t._v("的第一个传参。")],1),t._v(" "),a("h2",{attrs:{id:"流程概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程概览"}},[t._v("#")]),t._v(" 流程概览")]),t._v(" "),a("p",[t._v("至此，"),a("code",[t._v("ReactDOM.render")]),t._v("的流程就和我们已知的流程连接上了。")]),t._v(" "),a("p",[t._v("整个流程如下：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("创建fiberRootNode、rootFiber、updateQueue（"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("legacyCreateRootFromDOMContainer"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("）\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),t._v("\n\n创建Update对象（"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("updateContainer"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("）\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),t._v("\n\n从fiber到root（"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("markUpdateLaneFromFiberToRoot"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("）\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),t._v("\n\n调度更新（"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("ensureRootIsScheduled"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("）\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),t._v("\n\nrender阶段（"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("performSyncWorkOnRoot"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" 或 "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("performConcurrentWorkOnRoot"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("）\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("v")]),t._v("\n\ncommit阶段（"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("commitRoot"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("）\n")])])]),a("h2",{attrs:{id:"react的其他入口函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react的其他入口函数"}},[t._v("#")]),t._v(" React的其他入口函数")]),t._v(" "),a("p",[t._v("当前"),a("code",[t._v("React")]),t._v("共有三种模式：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("legacy")]),t._v("，这是当前"),a("code",[t._v("React")]),t._v("使用的方式。当前没有计划删除本模式，但是这个模式可能不支持一些新功能。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("blocking")]),t._v("，开启部分"),a("code",[t._v("concurrent")]),t._v("模式特性的中间模式。目前正在实验中。作为迁移到"),a("code",[t._v("concurrent")]),t._v("模式的第一个步骤。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("concurrent")]),t._v("，面向未来的开发模式。我们之前讲的"),a("code",[t._v("任务中断/任务优先级")]),t._v("都是针对"),a("code",[t._v("concurrent")]),t._v("模式。")])])]),t._v(" "),a("p",[t._v("你可以从下表看出各种模式对特性的支持：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("legacy 模式")]),t._v(" "),a("th",[t._v("blocking 模式")]),t._v(" "),a("th",[t._v("concurrent 模式")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs",target:"_blank",rel:"noopener noreferrer"}},[t._v("String Refs"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("🚫**")]),t._v(" "),a("td",[t._v("🚫**")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/legacy-context.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Legacy Context"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("🚫**")]),t._v(" "),a("td",[t._v("🚫**")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/strict-mode.html#warning-about-deprecated-finddomnode-usage",target:"_blank",rel:"noopener noreferrer"}},[t._v("findDOMNode"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("🚫**")]),t._v(" "),a("td",[t._v("🚫**")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/concurrent-mode-suspense.html#what-is-suspense-exactly",target:"_blank",rel:"noopener noreferrer"}},[t._v("Suspense"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/concurrent-mode-patterns.html#suspenselist",target:"_blank",rel:"noopener noreferrer"}},[t._v("SuspenseList"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[t._v("Suspense SSR + Hydration")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[t._v("Progressive Hydration")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[t._v("Selective Hydration")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[t._v("Cooperative Multitasking")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[t._v("Automatic batching of multiple setStates")]),t._v(" "),a("td",[t._v("🚫*")]),t._v(" "),a("td",[t._v("✅")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/concurrent-mode-patterns.html#splitting-high-and-low-priority-state",target:"_blank",rel:"noopener noreferrer"}},[t._v("Priority-based Rendering"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/concurrent-mode-intro.html#interruptible-rendering",target:"_blank",rel:"noopener noreferrer"}},[t._v("Interruptible Prerendering"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/concurrent-mode-patterns.html#transitions",target:"_blank",rel:"noopener noreferrer"}},[t._v("useTransition"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/concurrent-mode-patterns.html#deferring-a-value",target:"_blank",rel:"noopener noreferrer"}},[t._v("useDeferredValue"),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("✅")])]),t._v(" "),a("tr",[a("td",[a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/concurrent-mode-patterns.html#suspense-reveal-train",target:"_blank",rel:"noopener noreferrer"}},[t._v('Suspense Reveal "Train"'),a("OutboundLink")],1)]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("🚫")]),t._v(" "),a("td",[t._v("✅")])])])]),t._v(" "),a("p",[t._v("*："),a("code",[t._v("legacy")]),t._v("模式在合成事件中有自动批处理的功能，但仅限于一个浏览器任务。非"),a("code",[t._v("React")]),t._v("事件想使用这个功能必须使用 "),a("code",[t._v("unstable_batchedUpdates")]),t._v("。在"),a("code",[t._v("blocking")]),t._v("模式和"),a("code",[t._v("concurrent")]),t._v("模式下，所有的"),a("code",[t._v("setState")]),t._v("在默认情况下都是批处理的。")]),t._v(" "),a("p",[t._v("**：会在开发中发出警告。")]),t._v(" "),a("p",[t._v("模式的变化影响整个应用的工作方式，所以无法只针对某个组件开启不同模式。")]),t._v(" "),a("p",[t._v("基于此原因，可以通过不同的"),a("code",[t._v("入口函数")]),t._v("开启不同模式：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("legacy")]),t._v(" -- "),a("code",[t._v("ReactDOM.render(<App />, rootNode)")])]),t._v(" "),a("li",[a("code",[t._v("blocking")]),t._v(" -- "),a("code",[t._v("ReactDOM.createBlockingRoot(rootNode).render(<App />)")])]),t._v(" "),a("li",[a("code",[t._v("concurrent")]),t._v(" -- "),a("code",[t._v("ReactDOM.createRoot(rootNode).render(<App />)")])])]),t._v(" "),a("blockquote",[a("p",[t._v("你可以在"),a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/concurrent-mode-adoption.html#why-so-many-modes",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("看到"),a("code",[t._v("React")]),t._v("团队解释为什么会有这么多模式")])]),t._v(" "),a("p",[t._v("虽然不同模式的"),a("code",[t._v("入口函数")]),t._v("不同，但是他们仅对"),a("code",[t._v("fiber.mode")]),t._v("变量产生影响，对我们在"),a("RouterLink",{attrs:{to:"/reactDiff/state/reactdom.html#流程概览"}},[t._v("流程概览")]),t._v("中描述的流程并无影响。")],1)])}),[],!1,null,null,null);e.default=s.exports}}]);