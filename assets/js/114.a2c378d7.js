(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{510:function(t,r,E){"use strict";E.r(r);var e=E(56),a=Object(e.a)({},(function(){var t=this,r=t.$createElement,E=t._self._c||r;return E("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[E("p",[t._v("树是用来模拟具有树状结构性质的数据集合。根据它的特性可以分为非常多的种类，对于我们来讲，掌握二叉树这种结构就足够了，它也是树最简单、应用最广泛的种类。")]),t._v(" "),E("blockquote",[E("p",[t._v("二叉树是一种典型的树树状结构。如它名字所描述的那样，二叉树是每个节点最多有两个子树的树结构，通常子树被称作“左子树”和“右子树”。")])]),t._v(" "),E("p",[E("img",{attrs:{src:"https://i.loli.net/2019/08/18/3HdPxIMFOQv9yEz.jpg",alt:""}})]),t._v(" "),E("h3",{attrs:{id:"二叉树遍历"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#二叉树遍历"}},[t._v("#")]),t._v(" 二叉树遍历")]),t._v(" "),E("blockquote",[E("p",[t._v("重点中的重点，最好同时掌握递归和非递归版本，递归版本很容易书写，但是真正考察基本功的是非递归版本。")])]),t._v(" "),E("ul",[E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉树的中序遍历"),E("OutboundLink")],1)]),t._v(" "),E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉树的前序遍历"),E("OutboundLink")],1)]),t._v(" "),E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉树的后序遍历"),E("OutboundLink")],1)])]),t._v(" "),E("blockquote",[E("p",[t._v("根据前序遍历和中序遍历的特点重建二叉树，逆向思维，很有意思的题目")])]),t._v(" "),E("ul",[E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("重建二叉树"),E("OutboundLink")],1)]),t._v(" "),E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html#%E9%A2%98%E7%9B%AE2-%E6%B1%82%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("求二叉树的遍历"),E("OutboundLink")],1)])]),t._v(" "),E("h3",{attrs:{id:"二叉树的对称性"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的对称性"}},[t._v("#")]),t._v(" 二叉树的对称性")]),t._v(" "),E("ul",[E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%AF%B9%E7%A7%B0%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("对称的二叉树"),E("OutboundLink")],1)]),t._v(" "),E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%95%9C%E5%83%8F.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉树的镜像"),E("OutboundLink")],1)])]),t._v(" "),E("h3",{attrs:{id:"二叉搜索树"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#二叉搜索树"}},[t._v("#")]),t._v(" 二叉搜索树")]),t._v(" "),E("blockquote",[E("p",[t._v("二叉搜索树是特殊的二叉树，考察二叉搜索树的题目一般都是考察二叉搜索树的特性，所以掌握好它的特性很重要。")])]),t._v(" "),E("ol",[E("li",[t._v("若任意节点的左⼦子树不不空，则左⼦子树上所有结点的值均⼩小于它的 根结点的值;")]),t._v(" "),E("li",[t._v("若任意节点的右⼦子树不不空，则右⼦子树上所有结点的值均⼤大于它的 根结点的值;")]),t._v(" "),E("li",[t._v("任意节点的左、右⼦子树也分别为⼆二叉查找树。")])]),t._v(" "),E("ul",[E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E7%AC%ACk%E4%B8%AA%E8%8A%82%E7%82%B9.html#%E9%A2%98%E7%9B%AE",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉搜索树的第k个节点"),E("OutboundLink")],1)]),t._v(" "),E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉搜索树的后序遍历"),E("OutboundLink")],1)])]),t._v(" "),E("h3",{attrs:{id:"二叉树的深度"}},[E("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的深度"}},[t._v("#")]),t._v(" 二叉树的深度")]),t._v(" "),E("blockquote",[E("p",[t._v("二叉树的深度为根节点到最远叶子节点的最长路径上的节点数。")])]),t._v(" "),E("blockquote",[E("p",[t._v("平衡二叉树：左右子树深度之差大于1")])]),t._v(" "),E("ul",[E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉树的最大深度"),E("OutboundLink")],1)]),t._v(" "),E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6.html#%E8%80%83%E5%AF%9F%E7%82%B9",target:"_blank",rel:"noopener noreferrer"}},[t._v("二叉树的最小深度"),E("OutboundLink")],1)]),t._v(" "),E("li",[E("a",{attrs:{href:"http://www.conardli.top/docs/dataStructure/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("平衡二叉树"),E("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=a.exports}}]);